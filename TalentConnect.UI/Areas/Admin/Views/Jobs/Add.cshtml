@model TalentConnect.UI.Models.Request.AddJobRequest

@{
    ViewBag.Title = "Add a Vacancy";
    Layout = "~/Views/Shared/_admin.cshtml";
}

@section PageTitle{
    <h2><i class="fa fa-plus-circle"></i>Add a Job</h2>
    <nav id="breadcrumbs">
        <ul>
            <li>You are here:</li>
            <li><a href="#">Admin</a></li>
            <li>Jobs</li>
            <li>Add Job</li>
        </ul>
    </nav>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "Please correct the errors", new { @class = "notification error" })
        <div class="form">
            @Html.LabelFor(model => model.Title)
            @Html.TextBoxFor(model => model.Title, new { @class="search-field", placeholder="Job Title"})
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "error" })
        </div>
        <div class="form">
            @Html.LabelFor(model => model.City)
            @Html.TextBoxFor(model => model.City, new { @class = "search-field", placeholder = "City" })
        </div>
        <div class="form">
            @Html.LabelFor(model => model.SelectedProvince)
            @Html.DropDownListFor(m => m.SelectedProvince, new SelectList(Model.Provinces, "Abbreviation", "Name"), " - Select Province")
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearOfExperince, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearOfExperince, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearOfExperince, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form">
            <label for="Description">Description</label>
            @Html.TextBoxFor(model => model.Description, new { @class = "search-field" })
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
